name: Run Tox tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9, pypy3]
        exclude:
          - os: windows-latest
            python-version: pypy3
    name: Test on Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install system library(linux)
        if: runner.os == 'linux'
        run: sudo apt install libarchive-dev
      - name: Download libarchive(Windows)
        if: runner.os == 'Windows'
        uses: carlosperate/download-file-action@v1.0.3
        with:
          # file-url: "https://libarchive.org/downloads/libarchive-v3.5.1-win64.zip"
          file-url: "https://github.com/libarchive/libarchive/releases/download/3.5.1/libarchive-v3.5.1-win64.zip"
          file-name: "libarchive-v3.5.1-win64.zip"
      - name: Install libarchive(Windows)
        if: runner.os == 'Windows'
        run: |
          $file = "libarchive-v3.5.1-win64.zip"
          Expand-Archive -LiteralPath $file -DestinationPath $env:GITHUB_WORKSPACE
      - name: Install dependencies
        run: |
          pip install -U pip
          pip install tox tox-gh-actions coveralls
      - name: Test project with tox
        if: runner.os != 'Windows'
        run: |
          tox
        env:
          PYTEST_ADDOPTS: "--cov-config=pyproject.toml --cov --cov-append --benchmark-skip"
      - name: Test project with tox (windows)
        if: runner.os == 'Windows'
        run: |
          echo LIBARCHIVE="${env:LIBARCHIVE}"
          tox
        env:
          LIBARCHIVE: "${{ github.workspace }}\\libarchive\\bin\\archive.dll"
          PYTEST_ADDOPTS: "--cov-config=pyproject.toml --cov --cov-append --benchmark-skip"
      - name: Send coverage to coveralls
        if: github.ref == 'refs/heads/master'
        run: |
          coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: py-${{ matrix.python-version }}-${{ matrix.os }}
  finish:
    runs-on: ubuntu-latest
    name: finish parallel build
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
          architecture: x64
      - name: Tell Coveralls that the parallel build is finished
        run: |
          curl -k \
              https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN \
              -d "payload[build_num]=$GITHUB_SHA&payload[status]=done"
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
